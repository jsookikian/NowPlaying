/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnRhythmQueryOptions {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GnRhythmQueryOptions(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnRhythmQueryOptions obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public void lookupData(GnLookupData lookupData, boolean bEnable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_lookupData(swigCPtr, this, lookupData.swigValue(), bEnable);
  }

  public void returnCount(long count) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_returnCount(swigCPtr, this, count);
  }

  public void focusPopularity(long amount) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_focusPopularity(swigCPtr, this, amount);
  }

  public void focusSimilarity(long amount) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_focusSimilarity(swigCPtr, this, amount);
  }

  public void recommendationMaxTracksPerArtist(long count) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_recommendationMaxTracksPerArtist(swigCPtr, this, count);
  }

  public void recommendationRotationRadio(boolean bEnable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_recommendationRotationRadio(swigCPtr, this, bEnable);
  }

  public void stationDMCA(boolean bEnable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_stationDMCA(swigCPtr, this, bEnable);
  }

  public void networkInterface(String intfName) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_networkInterface__SWIG_0(swigCPtr, this, intfName);
  }

  public String networkInterface() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnRhythmQueryOptions_networkInterface__SWIG_1(swigCPtr, this);
  }

  public void custom(String option, boolean bEnable) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_custom__SWIG_0(swigCPtr, this, option, bEnable);
  }

  public void custom(String option, long value) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_custom__SWIG_1(swigCPtr, this, option, value);
  }

  public void custom(String option, String value) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmQueryOptions_custom__SWIG_2(swigCPtr, this, option, value);
  }

}
