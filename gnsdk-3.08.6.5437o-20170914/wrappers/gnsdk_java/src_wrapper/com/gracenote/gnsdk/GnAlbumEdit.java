/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnAlbumEdit extends GnDataObject {
  private transient long swigCPtr;

  protected GnAlbumEdit(long cPtr, boolean cMemoryOwn) {
    super(gnsdk_javaJNI.GnAlbumEdit_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnAlbumEdit obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gnsdk_javaJNI.delete_GnAlbumEdit(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public GnAlbum gnAlbum() {
    return new GnAlbum(gnsdk_javaJNI.GnAlbumEdit_gnAlbum(swigCPtr, this), true);
  }

  public void genre(GnListElement genreElement) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_genre(swigCPtr, this, GnListElement.getCPtr(genreElement), genreElement);
  }

  public GnTitleEdit title() throws com.gracenote.gnsdk.GnException {
    return new GnTitleEdit(gnsdk_javaJNI.GnAlbumEdit_title(swigCPtr, this), true);
  }

  public GnArtistEdit artist() throws com.gracenote.gnsdk.GnException {
    return new GnArtistEdit(gnsdk_javaJNI.GnAlbumEdit_artist(swigCPtr, this), true);
  }

  public void language(GnListElement langElement) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_language(swigCPtr, this, GnListElement.getCPtr(langElement), langElement);
  }

  public String cdToc() {
    return gnsdk_javaJNI.GnAlbumEdit_cdToc__SWIG_0(swigCPtr, this);
  }

  public void cdToc(String value) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_cdToc__SWIG_1(swigCPtr, this, value);
  }

  public String label() {
    return gnsdk_javaJNI.GnAlbumEdit_label__SWIG_0(swigCPtr, this);
  }

  public void label(String value) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_label__SWIG_1(swigCPtr, this, value);
  }

  public long discInSet() {
    return gnsdk_javaJNI.GnAlbumEdit_discInSet__SWIG_0(swigCPtr, this);
  }

  public void discInSet(long discNumber) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_discInSet__SWIG_1(swigCPtr, this, discNumber);
  }

  public long totalInSet() {
    return gnsdk_javaJNI.GnAlbumEdit_totalInSet__SWIG_0(swigCPtr, this);
  }

  public void totalInSet(long totalDiscs) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_totalInSet__SWIG_1(swigCPtr, this, totalDiscs);
  }

  public boolean isCompilation() {
    return gnsdk_javaJNI.GnAlbumEdit_isCompilation__SWIG_0(swigCPtr, this);
  }

  public void isCompilation(boolean bIsCompilation) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_isCompilation__SWIG_1(swigCPtr, this, bIsCompilation);
  }

  public boolean isClassical() {
    return gnsdk_javaJNI.GnAlbumEdit_isClassical__SWIG_0(swigCPtr, this);
  }

  public void isClassical(boolean bIsClassical) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_isClassical__SWIG_1(swigCPtr, this, bIsClassical);
  }

  public String year() {
    return gnsdk_javaJNI.GnAlbumEdit_year__SWIG_0(swigCPtr, this);
  }

  public void year(String value) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnAlbumEdit_year__SWIG_1(swigCPtr, this, value);
  }

  public GnTrackEdit track(long trackNum) throws com.gracenote.gnsdk.GnException {
    return new GnTrackEdit(gnsdk_javaJNI.GnAlbumEdit_track(swigCPtr, this, trackNum), true);
  }

  public GnTrackEditIterable tracks() {
    return new GnTrackEditIterable(gnsdk_javaJNI.GnAlbumEdit_tracks(swigCPtr, this), true);
  }

  public GnCreditEdit creditAdd() throws com.gracenote.gnsdk.GnException {
    return new GnCreditEdit(gnsdk_javaJNI.GnAlbumEdit_creditAdd(swigCPtr, this), true);
  }

  public GnCreditEdit credit(long ord) throws com.gracenote.gnsdk.GnException {
    return new GnCreditEdit(gnsdk_javaJNI.GnAlbumEdit_credit(swigCPtr, this, ord), true);
  }

}
