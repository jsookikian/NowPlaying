/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.gracenote.gnsdk;

public class GnRhythmStation {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GnRhythmStation(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GnRhythmStation obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gnsdk_javaJNI.delete_GnRhythmStation(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

	private IGnStatusEvents pEventHandler;
	private IGnStatusEventsProxyU eventHandlerProxy;

  public GnRhythmStation(GnRhythmQuery rhythmQuery, GnRhythmFilter filter, IGnStatusEvents pEventHandler) throws com.gracenote.gnsdk.GnException {
	this(0, true);
	
	eventHandlerProxy = new IGnStatusEventsProxyU(pEventHandler);
	this.pEventHandler=pEventHandler;	// <REFERENCE_NAME_CHECK><TYPE>IGnStatusEvents</TYPE><NAME>pEventHandler</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
    swigCPtr = gnsdk_javaJNI.new_GnRhythmStation__SWIG_0(GnRhythmQuery.getCPtr(rhythmQuery), rhythmQuery, GnRhythmFilter.getCPtr(filter), filter, (eventHandlerProxy==null)?0:IGnStatusEventsProxyL.getCPtr(eventHandlerProxy), eventHandlerProxy);
}

  public GnRhythmStation(GnRhythmQuery rhythmQuery, GnRhythmFilter filter) throws com.gracenote.gnsdk.GnException {
	this(0, true);
	
	eventHandlerProxy = new IGnStatusEventsProxyU(pEventHandler);
	this.pEventHandler=pEventHandler;	// <REFERENCE_NAME_CHECK><TYPE>IGnStatusEvents</TYPE><NAME>pEventHandler</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
    swigCPtr = gnsdk_javaJNI.new_GnRhythmStation__SWIG_1(GnRhythmQuery.getCPtr(rhythmQuery), rhythmQuery, GnRhythmFilter.getCPtr(filter), filter);
}

  public GnRhythmStation(GnRhythmQuery rhythmQuery, IGnStatusEvents pEventHandler) throws com.gracenote.gnsdk.GnException {
	this(0, true);
	
	eventHandlerProxy = new IGnStatusEventsProxyU(pEventHandler);
	this.pEventHandler=pEventHandler;	// <REFERENCE_NAME_CHECK><TYPE>IGnStatusEvents</TYPE><NAME>pEventHandler</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
    swigCPtr = gnsdk_javaJNI.new_GnRhythmStation__SWIG_2(GnRhythmQuery.getCPtr(rhythmQuery), rhythmQuery, (eventHandlerProxy==null)?0:IGnStatusEventsProxyL.getCPtr(eventHandlerProxy), eventHandlerProxy);
}

  public GnRhythmStation(GnRhythmQuery rhythmQuery) throws com.gracenote.gnsdk.GnException {
	this(0, true);
	
	eventHandlerProxy = new IGnStatusEventsProxyU(pEventHandler);
	this.pEventHandler=pEventHandler;	// <REFERENCE_NAME_CHECK><TYPE>IGnStatusEvents</TYPE><NAME>pEventHandler</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
    swigCPtr = gnsdk_javaJNI.new_GnRhythmStation__SWIG_3(GnRhythmQuery.getCPtr(rhythmQuery), rhythmQuery);
}

  public GnRhythmStation(String stationId, GnUser user, IGnStatusEvents pEventHandler) throws com.gracenote.gnsdk.GnException {
	this(0, true);
	
	eventHandlerProxy = new IGnStatusEventsProxyU(pEventHandler);
	this.pEventHandler=pEventHandler;	// <REFERENCE_NAME_CHECK><TYPE>IGnStatusEvents</TYPE><NAME>pEventHandler</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
    swigCPtr = gnsdk_javaJNI.new_GnRhythmStation__SWIG_4(stationId, GnUser.getCPtr(user), user, (eventHandlerProxy==null)?0:IGnStatusEventsProxyL.getCPtr(eventHandlerProxy), eventHandlerProxy);
}

  public GnRhythmStation(String stationId, GnUser user) throws com.gracenote.gnsdk.GnException {
	this(0, true);
	
	eventHandlerProxy = new IGnStatusEventsProxyU(pEventHandler);
	this.pEventHandler=pEventHandler;	// <REFERENCE_NAME_CHECK><TYPE>IGnStatusEvents</TYPE><NAME>pEventHandler</NAME></REFERENCE_NAME_CHECK> leave for scripted verification of names
	
    swigCPtr = gnsdk_javaJNI.new_GnRhythmStation__SWIG_5(stationId, GnUser.getCPtr(user), user);
}

  public String stationId() throws com.gracenote.gnsdk.GnException {
    return gnsdk_javaJNI.GnRhythmStation_stationId(swigCPtr, this);
  }

  public GnResponseAlbums generatePlaylist() throws com.gracenote.gnsdk.GnException {
    return new GnResponseAlbums(gnsdk_javaJNI.GnRhythmStation_generatePlaylist(swigCPtr, this), true);
  }

  public void event(GnRhythmEvent event, GnDataObject gnObj) throws com.gracenote.gnsdk.GnException {
    gnsdk_javaJNI.GnRhythmStation_event(swigCPtr, this, event.swigValue(), GnDataObject.getCPtr(gnObj), gnObj);
  }

  public IGnStatusEvents eventHandler() {
	return pEventHandler;
}

  public GnRhythmQueryOptions options() {
    return new GnRhythmQueryOptions(gnsdk_javaJNI.GnRhythmStation_options(swigCPtr, this), false);
  }

  public void setCancel(boolean bCancel) {
    gnsdk_javaJNI.GnRhythmStation_setCancel(swigCPtr, this, bCancel);
  }

  public boolean isCancelled() {
    return gnsdk_javaJNI.GnRhythmStation_isCancelled(swigCPtr, this);
  }

}
