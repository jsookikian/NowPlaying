//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace GracenoteSDK {

public class GnPlaylistStorageEnumerator : System.Collections.Generic.IEnumerator<System.String >, System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GnPlaylistStorageEnumerator(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GnPlaylistStorageEnumerator obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~GnPlaylistStorageEnumerator() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          gnsdk_csharp_marshalPINVOKE.delete_GnPlaylistStorageEnumerator(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

public bool
MoveNext( )
{
	return hasNext( );
}

public System.String Current {
	get {
		 return next();
	}
}
object System.Collections.IEnumerator.Current {
	get {
		return Current;
	}
}
public void
Reset( )
{
}

  public string __ref__() {
    string ret = gnsdk_csharp_marshalPINVOKE.GnPlaylistStorageEnumerator___ref__(swigCPtr);
    return ret;
  }

  public string next() {
	System.IntPtr temp = gnsdk_csharp_marshalPINVOKE.GnPlaylistStorageEnumerator_next(swigCPtr); 
	return GnMarshalUTF8.StringFromNativeUtf8(temp);
}

  public bool hasNext() {
    bool ret = gnsdk_csharp_marshalPINVOKE.GnPlaylistStorageEnumerator_hasNext(swigCPtr);
    return ret;
  }

  public uint distance(GnPlaylistStorageEnumerator itr) {
    uint ret = gnsdk_csharp_marshalPINVOKE.GnPlaylistStorageEnumerator_distance(swigCPtr, GnPlaylistStorageEnumerator.getCPtr(itr));
    if (gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Pending) throw gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GnPlaylistStorageEnumerator(collection_storage_provider provider, uint pos) : this(gnsdk_csharp_marshalPINVOKE.new_GnPlaylistStorageEnumerator__SWIG_0(collection_storage_provider.getCPtr(provider), pos), true) {
    if (gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Pending) throw gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Retrieve();
  }

  public GnPlaylistStorageEnumerator(GnPlaylistStorageEnumerator copy) : this(gnsdk_csharp_marshalPINVOKE.new_GnPlaylistStorageEnumerator__SWIG_1(GnPlaylistStorageEnumerator.getCPtr(copy)), true) {
    if (gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Pending) throw gnsdk_csharp_marshalPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
