<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Setting Local and Online Lookup Modes</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="https://cloud.typography.com/7045754/7789972/css/fonts.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.next-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.remove-highlight-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/highlight.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js">
        </script>
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../../../landing-page/gnsdk-home.htm" alt="Logo"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <p style="font-weight: bold;"><span class="GeneralProductNameFull">GNSDK</span> <span class="GeneralAPI">OO APIs</span></p>
                            <p>Version 3.08.6.5437 : <span class="SystemShortDate">9/14/2017</span></p>
                            <hr width="100%" size="0" align="center" />
                            <div class="content">
                                <div id="contentBody">
                                    <div class="row collapse">
                                        <div class="sideContent">
                                            <div class="clearfix">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie next-topic-button" title="Navigate next">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="remove highlight" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/gnsdk__gnsdk_oo_all.js" data-mc-side-menu="True" data-mc-max-depth="4" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                        <h1><a name="kanchor402"></a>Setting Local and Online Lookup Modes</h1>
                                        <p>You can set lookup modes to determine if GNSDK lookups are done locally or online. GNSDK is designed to operate exactly the same way in either case. You can use the <code class="prettyprint">GnUser.LookupMode</code> method to set this option for the user. You can also set this option for specific queries. </p>
                                        <p>The terms <i>local</i> and <i>online</i> apply to the following:</p>
                                        <ol>
                                            <li value="1"><b>Online lookup</b><a name="kanchor403"></a>—Refers to queries made to the Gracenote service over the Internet.</li>
                                            <li value="2"><b>Online queries stored locally</b>—The GNSDK generates these as lookups take place.  Even though they are stored locally, online stores are considered part of online lookup, not local lookup. The <code class="prettyprint">GnManager</code> class can be used to manage these stores. Note that this store requires your application to enable GNSDK storage and caching. See <i><a href="enable-storage.htm" class="MCXref xref" xrefformat="{para}">Enabling and Using GNSDK Storage</a></i> for more information.</li>
                                        </ol>
                                        <h2>Supported Lookup Modes</h2>
                                        <p>GNSDK supports the following lookup mode options as shown with these <code class="prettyprint">GnLookupMode</code> enums:</p>
                                        <ol>
                                            <li value="1"><b><code class="prettyprint">kLookupModeOnline</code></b>—This is the default lookup mode. First, the query checks cache (if it exists) for a match. If no match is found in the cache, then an online query to the Gracenote Service is performed. If a result is found there, it is stored in the local online cache. The query fails if no connection to the Gracenote Service exists. Via the User object, you can set the length of time before cache lookup query expires. </li>
                                            <li value="2"><b><code class="prettyprint">kLookupModeLocal</code></b>—Forces the lookup to be done against the local database only. Local stores created from (online) query results are not queried in this mode. The query fails if no local database exists. </li>
                                            <li value="3"><b><code class="prettyprint">kLookupModeOnlineCacheOnly</code></b>—Queries are done against the online cache only and does not perform a network lookup. The query fails is no online provider exists.</li>
                                            <li value="4"><b><code class="prettyprint">kLookupModeOnlineNoCache</code></b>—Forces the query to be done online only and does not perform a local cache lookup first.
The query fails if no online provider exists.Online queries and lists are not written to local storage, even if a storage provider has been initialized.</li>
                                            <li value="5"><b><code class="prettyprint">kLookupModeOnlineNoCacheRead</code></b>—Forces the query to be done online only and does not perform a local cache lookup first.  The query fails if no online provider exists. Online queries and lists are not written to local storage, even if a storage provider has been initialized.</li>
                                        </ol>
                                        <p>The local and online modes are the standard modes for applications to choose between. The other online options (<code class="prettyprint">kLookupModeOnlineNoCache</code>, <code class="prettyprint">kLookupModeOnlineNoCacheRead</code>, and <code class="prettyprint">kLookupModeOnlineCacheOnly</code>) are variations of the online mode. These additional online lookup modes give more control over when the SDK is allowed to perform a network connection and how to use the online queries stored locally. The online-query store is used as a performance aid for online queries. If no storage provider is present, no online-query store is utilized.</p>
                                        <p><b>Setting lookup mode for user code sample (C++)</b>:</p><pre class="prettyprint">/* Set lookup mode (all queries done with this user will inherit the lookup mode) */
user.Options().LookupMode(kLookupModeLocal);</pre>
                                        <p><b>Objective-C</b>:</p><pre class="prettyprint">NSError *error = nil;
[[self.gnUser options] lookupModeWithLookupMode:kLookupModeLocal error:&amp;error];</pre>
                                        <h2>Default Lookup Mode</h2>
                                        <p>If the application does not set one, the GNSDK sets a default lookup mode—<code class="prettyprint">kLookupModeOnline</code>—unless the GNSDK license file limits all queries to be local-only, which prevents the SDK from connecting online. When this limit is set in the license file, the lookup mode defaults to <code class="prettyprint">kLookupModeLocal</code>.</p>
                                        <h2>Setting the Lookup Mode for a User or Queries</h2>
                                        <p>You can set the lookup mode as a user option or set it separately as a specific query option. Calling the <code class="prettyprint">GnUser.LookupMode</code> method applies the option to all queries using the user handle. You can also use the <code class="prettyprint">GnMusicId.LookupMode</code> , <code class="prettyprint">GnMusicIdFile.LookupMode</code>, or <code class="prettyprint">GnMusicIdStream.LookupMode</code> methods to override this for specific queries. </p>
                                        <p><b>User example (C++):</b>
                                        </p><pre class="prettyprint">GnUser user = GnUser(userStore, clientId, clientIdTag, applicationVersion);
/* Set user to match our desired lookup mode (all queries done with this user will inherit the lookup mode) */
user.Options().LookupMode(kLookupModeLocal);
    </pre>
                                        <p><b><a name="kanchor404"></a>Query example (C++):</b>
                                        </p><pre class="prettyprint">/* Perform the query */
music_id.Options().LookupMode(kLookupModeLocal); 
GnResponseAlbums response = music_id.FindAlbums(albObject);</pre>
                                        <p><b>Query example (Objective-C):</b>
                                        </p><pre class="prettyprint">GnMusicIdStreamOptions *options = [self.gnMusicIDStream options];
[options lookupMode:kLookupModeLocal error:&amp;error];</pre>
                                        <h2>Using Both Local and Online Lookup Modes</h2>
                                        <p>Your application can switch between local and online lookups, as needed.</p>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />For example (C++):</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint"><a name="kanchor405"></a><a name="kanchor406"></a><a name="kanchor407"></a><a name="kanchor408"></a>
/* Let's try a local lookup first */
music_id.Options().LookupMode(kLookupModeLocal);


/*** Set the input text as album title, artist name, track title and perform the query****/
GnResponseDataMatches response = music_id.FindMatches(
  "Nevermind",          // Album Title
  "Smells Like Teen Spirit",  // Track Title
  "Nirvana",          // Artist Name
   GNSDK_NULL, 
   GNSDK_NULL
);

/* See how many matches were found. */
gnsdk_uint32_t count = response.DataMatches().count();

if (count == 0)
{
  if (isNetworkAvailable())
  {
    cout &lt;&lt; endl &lt;&lt; "No results found locally, trying and online query." &lt;&lt; endl;
    /* Change the lookup mode on the query handle to 'Online No Cache.' 
     * Query caching is not used for automotive as it expires entries too quickly.
     * Automotive use cases instead use the result DB to persist results in an
     * embedded database. 
     */
    music_id.Options().LookupMode(kLookupModeOnlineNoCache);

    response = music_id.FindMatches(
             "Nevermind",         // Album Title
             "Smells Like Teen Spirit",   // Track Title
             "Nirvana",           // Artist Name
            GNSDK_NULL, 
            GNSDK_NULL
      );
    // Check if we have a match 
    count = response.DataMatches().count();
  }
}</pre>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr width="100%" size="0" align="center" />
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>