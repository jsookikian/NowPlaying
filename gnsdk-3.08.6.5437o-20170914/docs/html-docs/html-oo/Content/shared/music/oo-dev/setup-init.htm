<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Setup and Initialization</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="https://cloud.typography.com/7045754/7789972/css/fonts.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.next-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.remove-highlight-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/highlight.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js">
        </script>
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../../../landing-page/gnsdk-home.htm" alt="Logo"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <p style="font-weight: bold;"><span class="GeneralProductNameFull">GNSDK</span> <span class="GeneralAPI">OO APIs</span></p>
                            <p>Version 3.08.6.5437 : <span class="SystemShortDate">9/14/2017</span></p>
                            <hr width="100%" size="0" align="center" />
                            <div class="content">
                                <div id="contentBody">
                                    <div class="row collapse">
                                        <div class="sideContent">
                                            <div class="clearfix">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie next-topic-button" title="Navigate next">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="remove highlight" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/gnsdk__gnsdk_oo_all.js" data-mc-side-menu="True" data-mc-max-depth="4" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                        <h1>Setup and Initialization</h1>
                                        <p><b>To get started with GNSDK development:</b>
                                        </p>
                                        <ol>
                                            <li value="1"><a name="kanchor207"></a><a name="kanchor208"></a>Get a Client ID/Tag and License file for application authentication from Gracenote. See <a href="#auth">Authorizing a GNSDK Application</a>.</li>
                                            <li value="2">Include the GNSDK header for your platform to include all necessary libraries and headers. See <a href="#header" name="kanchor209">Including Header Files</a>.</li>
                                            <li value="3"><a name="kanchor210"></a>Instantiate a <code class="prettyprint">GnManager</code> object. See <a href="#manager">Instantiating a GNSDK Manager Object</a>.</li>
                                            <li value="4">Instantiate a <code class="prettyprint">GnUser</code> user object.  See <a href="#user" name="kanchor211">Instantiating a User Object</a>.</li>
                                        </ol>
                                        <h2><a name="auth"></a>Authorizing a GNSDK Application</h2>
                                        <p>Gracenote uses product licensing and server-side entitlements to manage your application's access to metadata. </p>
                                        <p><a name="kanchor212"></a><a name="kanchor213"></a>As a Gracenote customer, Gracenote works with you to determine the kind of products you need (such as MusicID, Playlist, and so on). Gracenote also determines the metadata your application requires for the products you license.</p>
                                        <p>Gracenote uses this information to create a unique customer ID (called a Client ID/Tag), a license file, and server-side metadata entitlements specifically tailored to your application.</p>
                                        <p><a name="kanchor214"></a>When developing a GNSDK application, you must include a Client ID and license file to authorize your application with Gracenote. In general, the License file enables your application to use the Gracenote products (and their corresponding GNSDK modules) that you purchased. Gracenote Media Services uses the Client ID to enable access to the metadata your application is entitled to use.</p>
                                        <p>All applications are entitled to a set of core metadata based on the products that are licensed. Your application can access enriched metadata through server-side metadata entitlements. Contact your Gracenote representative for more information. </p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Some applications require a local (embedded) database for metadata. These systems do not access Gracenote Media Services to validate metadata entitlements and access metadata. Instead, metadata entitlements are pre-applied to the local database.</p>
                                        <h3>Client ID/Tag</h3>
                                        <p>Each GNSDK customer receives a unique client ID/Tag string from Gracenote. This string uniquely identifies each application to Gracenote Media Services and lets Gracenote deliver the specific metadata the application requires.</p>
                                        <p>A Client ID/Tag string consists of two sets of alphanumeric characters separated with a hyphen. The numbers before the hyphen constitute the 'ID' and the alphanumeric characters after, the 'Tag'. A client ID/Tag string has the following format: </p><pre class="prettyprint">&lt;10 character client ID&gt;<b>-</b>&lt;17 character client ID tag&gt;</pre>
                                        <h3><a name="kanchor215"></a>License File</h3>
                                        <p>Gracenote provides a license file along with your Client ID.  The license file notifies Gracenote to enable the GNSDK products you purchased for your application. </p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span><a name="kanchor216"></a>You should secure your Gracenote client id, tag and license information. Something  similar to the way Android recommends protecting a Google Play public key from malicious hackers: <a href=" http://developer.android.com/google/play/billing/billing_best_practices.html"> http://developer.android.com/google/play/billing/billing_best_practices.html</a></p>
                                        <h2><a name="header"></a>Including Header Files</h2>
                                        <p>GNSDK consists of a set of shared modules. The GNSDK Manager module is required for all applications. All other modules are optional. Your application's feature requirements determine which additional modules should be used.</p>
                                        <p>For convenience, all your application has to do is include a single GNSDK header file and all necessary header files and libraries will be automatically included.</p>
                                        <p><b>Java</b>
                                        </p><pre class="prettyprint">import com.gracenote.gnsdk.*;</pre>
                                        <p data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt"><b>Objective-C</b><pre class="prettyprint">#import &lt;GnSDKObjC/Gn.h&gt;</pre>
                                        </p>
                                        <p><b><a name="kanchor217"></a><a name="kanchor218"></a>Windows Phone C#</b>
                                        </p><pre class="prettyprint">using Gracenote;</pre>
                                        <p data-mc-conditions="Default.desk-gen-cndt,Default.auto-gen-cndt,Default.acr-gen-cndt"><b>C++</b><pre class="prettyprint">#include "gnsdk.hpp"</pre>
                                        </p>
                                        <p data-mc-conditions="Default.desk-gen-cndt,Default.auto-gen-cndt"><b>C#</b><pre class="prettyprint">using GracenoteSDK;</pre>
                                        </p>
                                        <h2><a name="manager"></a>Instantiating a GNSDK Manager Object</h2>
                                        <p>The first thing your application needs to do is initialize an SDK Manager object (<code class="prettyprint">GnManager</code>) using the GNSDK library path and the contents of the license file you obtained from GSS. The SDK Manager object is used to monitor an application's interaction with Gracenote.</p>
                                        <h3>Specifying the License File</h3>
                                        <p>Your application must provide the license file when you allocate a <code class="prettyprint">GnManager</code> object. This class' constructor  gives you the following options for submitting the license file:</p>
                                        <ul>
                                            <li value="1"><b>Null-terminated string</b>—Set the input mode parameter to <code class="prettyprint">GnLicenseInputMode.kLicenseInputModeString</code> and pass the license file as a null-terminated string (see examples below).</li>
                                            <li value="2"><b>Filename</b>—Set the input mode parameter to <code class="prettyprint">GnLicenseInputMode.kLicenseInputModeFilename</code> and pass the relative filename in the string parameter.</li>
                                        </ul>
                                        <p><b>Code samples</b>
                                        </p>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Java</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint"><a name="kanchor219"></a>// Load GNSDK native library
static {
  try {
      System.loadLibrary("gnsdk_java_marshal");
    } catch (UnsatisfiedLinkError unsatisfiedLinkError) {
       System.err.println("Native code library failed to load\n" + unsatisfiedLinkError.getMessage());
       System.exit(1);
    }
}
 
// Initialize GNSDK
gnsdk = new GnManager(libraryPath,                  // SDK Libraries location
            gnsdkLicenseFilePath,               // License file path and name
            GnLicenseInputMode.kLicenseInputModeFilename);  // Input License as a file</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Android Java</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">private String gnsdkLicense = &lt;get license as string from asset&gt;;
Context context = this.getApplicationContext();
       
// Initialize GNSDK
gnsdk = new GnManager(context,                    // Android Context
            gnsdkLicense,                 // License as a string
            GnLicenseInputMode.kLicenseInputModeString);  // Input License as a string

</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Objective-C</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">@property  (strong) GnManager *gnManager;
NSError*   error = nil;
NSString*  resourcePath  = [[NSBundle mainBundle] pathForResource:
              gnsdkLicenseFilename ofType: nil];
NSString*   licenseString = [NSString stringWithContentsOfFile: resourcePath
               encoding: NSUTF8StringEncoding
               error: &amp;error];    
self.gnManager = [[GnManager alloc] initWithLicense: licenseString licenseInputMode: kLicenseInputModeString];</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Windows Phone C#</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">/*
* Initalize GNSDK
*/
string licenseString = ReadFile(App.gnLicenseFileName_);
App.gnManager_ = new GnManager(licenseString, GnLicenseInputMode.kLicenseInputModeString);</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />C++</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">/**
* Initalize SDK
*/
GnManager gnMgr(licenseFile, kLicenseInputModeFilename);</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />C#</a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">/* Initialize SDK */
GnManager manager = new GnManager(gnsdkLibraryPath, licenseFile, GnLicenseInputMode.kLicenseInputModeFilename);</pre>
                                            </div>
                                        </div>
                                        <h2><a name="user"></a>Instantiating a User Object</h2>
                                        <p>To make queries, every application is required to instantiate a User object (<code class="prettyprint">GnUser</code><a name="kanchor220"></a>). Most devices will only have one user; however, on a server, for example, there could be a number of users running your application. Gracenote uses the Client ID and Client Tag to verify that the licensed and allowable users quota has not been exceeded.</p>
                                        <p><code class="prettyprint">GnUser</code> objects can be created 'online,' which means the Gracenote back-end creates and verifies them. Alternatively, they can be created 'local only,' which means the SDK creates and uses them locally.</p>
                                        <p>For example (Java):</p><pre class="prettyprint">// Create user for video and music
gnUser = new GnUser(gnUserStore, clientId, clientTag, "1.0");</pre>
                                        <h3><a name="kanchor221"></a>Saving the User Object to Persistent Storage</h3>
                                        <p>User objects should be saved to persistent storage. If an app registers a new user on every use instead of retrieving it from storage, then the user quota maintained for the Client ID is quickly exhausted. Once the quota is reached, attempting to create new users will fail. To maintain an accurate usage profile for your application, and to ensure that the services you are entitled to are not being used unintentionally, it is important that your application registers a new user only when needed, and then stores that user for future use.</p>
                                        <p>To save to persistent storage, you have the option to implement the <code class="prettyprint">IGnUserStore</code> interface which requires you to implement two methods: <code class="prettyprint">LoadSerializedUser</code> and <code class="prettyprint">StoreSerializedUser</code>.</p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span><a name="kanchor222"></a><a name="kanchor223"></a>On mobile and ACR platforms (Android, iOS, Windows), the SDK provides the <code class="prettyprint">GnUserStore</code> class, a platform-specific implementation of the <code class="prettyprint">IGnUserStore</code> interface. Storage on these devices is implemented in platform-specific ways. On Android, for example, the User object is saved to shared preferences.</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt">Example implementation of <code class="prettyprint">IGnUserStore</code> (C++):</p><pre data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt">/*-----------------------------------------------------------------------------
 *  class UserStore
 *  Example implementation of interface: IGnUserStore
 *    Loads and stores User data for the GnUser object. This sample stores the
 *    user data to a local file named 'user.txt'.
 *    Your application should store the user data to an appropriate location.
 */
class UserStore : public IGnUserStore
{
public:
  GnString
  LoadSerializedUser(gnsdk_cstr_t clientId)
  {
    std::fstream  userRegFile;
    std::string   fileName;
    std::string   serialized;
    GnString    userData;
 
    fileName = clientId;
    fileName += "_user.txt";
 
    userRegFile.open(fileName.c_str(), std::ios_base::in);
    if (!userRegFile.fail())
    {
      userRegFile &gt;&gt; serialized;
      userData = serialized.c_str();
    }
    return userData;
  }
 
  bool
  StoreSerializedUser(gnsdk_cstr_t clientId, gnsdk_cstr_t userData)
  {
    std::fstream userRegFile;
    std::string  fileName;
 
    fileName = clientId;
    fileName += "_user.txt";
 
 
    /* store user data to file */
    userRegFile.open(fileName.c_str(), std::ios_base::out);
    if (!userRegFile.fail())
    {
      userRegFile &lt;&lt; userData;
      return true;
    }
    return false;
  }
};</pre>
                                        <p>You can then pass an instance of this class as a parameter in a <code class="prettyprint">GnUser</code> constructor and the SDK will automatically read the User object from storage and use it to create a new User ID. The SDK may also periodically <code class="prettyprint">SaveSerializedUser</code> when user data changes. </p>
                                        <p><b>Allocating a User object code samples:</b>
                                        </p>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />C++
        </a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">UserStore userStore;
GnUser gnUser = GnUser(userStore, clientId, clientIdTag, applicationVersion);</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Java         </a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">GnUser gnUser = new GnUser( new UserStore(), clientId, clientIdTag, CLIENT_APP_VERSION );</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />C#         </a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">GnUser gnUser = GetUser(manager, clientId, clientIdTag, applicationVersion, lookupMode);</pre>
                                            </div>
                                        </div>
                                        <br />
                                        <h3>User Object Options</h3>
                                        <p>You can set/get the following options with a the <code class="prettyprint">GnUser</code>'s <code class="prettyprint">GnUserOptions</code> class:</p>
                                        <ul>
                                            <li value="1"><b>CacheExpiration</b>—The maximum duration for which an item in the GNSDK query cache is valid.</li>
                                            <li value="2"><b>DeviceModel</b>—Set the device model, used for runtime statistics.</li>
                                            <li value="3"><b>LookupMode</b>—Options for online or local lookup. See the <a href="set-local-online-lookup-modes.htm" name="kanchor224">Setting Local and Online Lookup Modes</a> topic for more information.</li>
                                            <li value="4"><b>NetworkInterface</b>—Set a specific network interface to use with this object's connections. This can be useful for systems with multiple network interaces. Otherwise, the operating system determines the interface to use.</li>
                                            <li value="5"><b>NetworkLoadBalance</b>—Enable/disable distributing queries across multiple Gracenote co-location facilities.</li>
                                            <li value="6"><b>NetworkProxy</b>—Host name, username, and password for routing GNSDK queries through a proxy.</li>
                                            <li value="7"><b>NetworkTimeout</b>—The network time-out for all GNSDK queries in milliseconds. </li>
                                            <li value="8"><b>UserInfo</b>—Set information (location, manufacturer, OS, UID) about this user, used for runtime statistics. </li>
                                        </ul>
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                    </div>
                                </div>
                            </div>
                            <hr width="100%" size="0" align="center" />
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>