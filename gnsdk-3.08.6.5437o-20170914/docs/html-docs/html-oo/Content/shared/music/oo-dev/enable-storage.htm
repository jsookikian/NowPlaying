<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Enabling and Using GNSDK Storage</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="https://cloud.typography.com/7045754/7789972/css/fonts.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.next-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.remove-highlight-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/highlight.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/TableStyles/Standard.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js">
        </script>
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../../../landing-page/gnsdk-home.htm" alt="Logo"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <p style="font-weight: bold;"><span class="GeneralProductNameFull">GNSDK</span> <span class="GeneralAPI">OO APIs</span></p>
                            <p>Version 3.08.6.5437 : <span class="SystemShortDate">9/14/2017</span></p>
                            <hr width="100%" size="0" align="center" />
                            <div class="content">
                                <div id="contentBody">
                                    <div class="row collapse">
                                        <div class="sideContent">
                                            <div class="clearfix">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie next-topic-button" title="Navigate next">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="remove highlight" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/gnsdk__gnsdk_oo_all.js" data-mc-side-menu="True" data-mc-max-depth="4" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                        <h1><a name="kanchor363"></a>Enabling and Using GNSDK Storage</h1>
                                        <p>To improve performance, your application can enable internal GNSDK storage and caching. The GNSDK has two kinds of storage, each managed through a different class:</p>
                                        <ol>
                                            <li value="1"><b>Online stores for lookups</b>—The GNSDK generates these as lookups take place. Use <code class="prettyprint">GnStoreOps</code> methods to manage these. </li>
                                            <li value="2"><b><a name="kanchor364"></a>Local lookup databases</b><a name="kanchor365"></a>—Gracenote generates these databases, which differ based on region, configuration, and other factors, and ships them to customers as read-only files. These support TUI, TOC and text lookup for music searches. The <code class="prettyprint">GnLookupLocal</code> class can be used to manage these databases.</li>
                                            <li value="3"><b><a name="kanchor366"></a>Results databases</b>—GNSDK applications can have dynamic databases called <i>Results databases</i> for persistent storage of either local or online search results and images. An application can have multiple Results databases open at one time, depending on application need.</li>
                                        </ol>
                                        <p><b>To enable and manage GNSDK storage:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Enable a <i>storage provider</i><a name="kanchor367"></a> (SQLite) for GNSDK storage</li>
                                            <li value="2">Allocate a <code class="prettyprint">GnManager</code> object for online stores (optional)</li>
                                            <li value="3">Allocate a <code class="prettyprint">GnLookupLocal</code> object for local lookup databases (optional)</li>
                                            <li value="4">Set a folder location(s) for GNSDK storage (required)</li>
                                            <li value="5">Manage storage through <code class="prettyprint">GnManager</code> and <code class="prettyprint">GnLookupLocal</code> methods</li>
                                        </ol>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Gracenote databases are regularly updated.Your application is responsible for replacing
old databases as new versions become available. This is typically accomplished by
    * shutting down GNSDK and replacing the database files.</p>
                                        <h2><a name="EnableStorage"></a><a name="kanchor368"></a>Enabling a Provider for GNSDK Storage</h2>
                                        <p>Before GNSDK storage can take place, you need to enable a storage provider. Right now, that means using the GNSDK SQLite module.  Note that this is for GNSDK use only—your application cannot use this database for its own storage. </p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>
    * For information on using SQLite, see <a href="http://sqlite.org">http://sqlite.org</a>.
    <br /><br />        * Note that enabling SQLite prevents linking to an external SQLite library for your own use.  </p>
                                        <p>In the future, other database modules will be made available, but currently, the only option is SQLite.</p>
                                        <p>To enable local storage, you need to call the <code class="prettyprint">GnStorageSqlite</code>'s <code class="prettyprint">Enable</code> method which returns a <code class="prettyprint">GnStorageSqlite</code> object.</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt,Default.acr-gen-cndt"><b>C++</b>
                                        </p><pre data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt,Default.acr-gen-cndt">/* Enable StorageSQLite module to use as our database engine */
GnStorageSqlite&amp; storageSqlite = GnStorageSqlite::Enable();</pre>
                                        <p><b>Java</b>
                                        </p><pre class="prettyprint">GnStorageSqlite gnStorageSqlite = GnStorageSqlite.enable();</pre>
                                        <p><b>Objective-C</b>
                                        </p><pre class="prettyprint">self.gnStorageSqlite = [GnStorageSqlite enable: &amp;error];</pre>
                                        <p><b><a name="kanchor369"></a><a name="kanchor370"></a>Windows Phone C#</b>
                                        </p><pre class="prettyprint">App.gnStorageSqlite_ = GnStorageSqlite.Enable;</pre>
                                        <h2 data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">GNSDK Production Stores</h2>
                                        <p data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">Once enabled, the GNSDK manages these stores:</p>
                                        <table class="TableStyle-Standard" cellspacing="0" style="mc-table-style: url('../../../Resources/TableStyles/Standard.css');" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">
                                            <thead>
                                                <tr class="TableStyle-Standard-Head-Header1">
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1">Stores </th>
                                                    <th class="TableStyle-Standard-HeadD-Regular-Header1">Description</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt"><a name="kanchor371"></a>Query store</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">The query store caches media identification requests</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">Lists store </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">The list store caches Gracenote display lists </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">Content store </td>
                                                    <td class="TableStyle-Standard-BodyA-Regular-Row1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">The content stores caches cover art and related information </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <p data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">You can get an object to manage these stores with the following <code class="prettyprint">GnManager</code> methods:</p>
                                        <ul>
                                            <li value="1" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt"><code class="prettyprint">GnStoreOps&amp; QueryCacheStore</code>—Get an object for managing the query cache store.</li>
                                            <li value="2" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt"><code class="prettyprint">GnStoreOps&amp; LocalesStore</code>—Get an object for managing the locales/lists store.</li>
                                            <li value="3" data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt"><code class="prettyprint">GnStoreOps&amp; ContentStore</code>—Get an object for managing the content store.</li>
                                        </ul>
                                        <p>
                                            <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">GNSDK Databases</h2>
                                            <p data-mc-conditions="Default.mobl-gen-cndt,Default.desk-gen-cndt,Default.auto-gen-cndt">Once enabled, the GNSDK manages these databases as the following <code class="prettyprint">GnLookupLocal GnLocalStorageName</code> enums indicate:</p>
                                        </p>
                                        <table class="TableStyle-Standard" cellspacing="0" style="mc-table-style: url('../../../Resources/TableStyles/Standard.css');" data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">
                                            <thead>
                                                <tr class="TableStyle-Standard-Head-Header1">
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1">Database (GnLookupLocal)</th>
                                                    <th class="TableStyle-Standard-HeadD-Regular-Header1">Description</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLocalStorageContent</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Used for querying Gracenote content.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLocalStorageMetadata</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Used for querying Gracenote metadata.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLocalStorageTOCIndex</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1"><a name="kanchor372"></a>Used for CD TOC searching.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1"><code class="prettyprint">kLocalStorageTextIndex</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyA-Regular-Row1">Used for text searching.</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2>Setting GNSDK Storage Folder Locations</h2>
                                        <p>You have the option to set a folder location for all GNSDK storage or locations for specific stores and databases. You might, for example, want to set your stores to different locations to improve performance and/or tailor your application to specific hardware. For example you might want your locale list store in flash memory and your image store on disk.</p>
                                        <p>If no locations for storage are set, the GNSDK, by default, uses the current directory. To set a location for all GNSDK storage, use the <code class="prettyprint">GnStorageSqlite</code> <code class="prettyprint">StorageLocation</code> method.</p>
                                        <p>Use the <code class="prettyprint">GnStoreOps</code>' <code class="prettyprint">Location</code> method or the <code class="prettyprint">GnLookupLocal</code>'s <code class="prettyprint">StorageLocation</code> method to set specific store or database locations. <code class="prettyprint">StorageLocation</code> takes a database enum  and a path location string. To set a store location, you would need to allocate a <code class="prettyprint">GnStoreOps</code> object for a specific cache using <code class="prettyprint">GnManager</code> methods and call its <code class="prettyprint">Location</code> method.</p>
                                        <p>Examples of setting a location for all stores and databases using SQLite</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.acr-gen-cndt"><b>C++</b><pre class="prettyprint">/* Set default folder location for all SQLite storage */
storageSqlite.StorageLocation(".");</pre>
                                        </p>
                                        <p><b>Java</b>
                                        </p><pre class="prettyprint">gnStorageSqlite.storageLocation(getExternalFilesDir(null).getAbsolutePath());</pre>
                                        <p><b>Objective-C</b>
                                        </p><pre class="prettyprint">[self.gnStorageSqlite storageLocationWithFolderPath:[GnAppDelegate applicationDocumentsDirectory] error: &amp;error];</pre>
                                        <p><b>Windows Phone C#</b>
                                        </p><pre class="prettyprint">App.gnStorageSqlite_.StorageLocation(Windows.Storage.ApplicationData.Current.LocalFolder.Path);</pre>
                                        <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Storing Results in Local Databases</h2>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">You can save query results in local databases, which can allow your application to operate offline or increase performance. Note that local databases do not require that your application have a Gracenote-provided production database.</p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Note that results databases do not support record deletion/expiration.</p>
                                        <p>You can implement results databases using the <code class="prettyprint">GnLookupLocal</code> and <code class="prettyprint">GnLookupDatabase</code> classes:</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt"><b>To save query results in local results databases:</b>
                                        </p>
                                        <ol>
                                            <li value="1">Enable local lookup and set its location (C++):
<pre class="prettyprint">
GnLookupLocal&amp; gnLookupLocal = GnLookupLocal::Enable();  </pre></li>
                                            <li value="2">Allocate a <code class="prettyprint">GnLookupDatabase</code> lookup provider with a database string identifier and a <code class="prettyprint">GnConfig</code> object:
<pre class="prettyprint">GnLookupDatabase OpenLocalDB(gnsdk_cstr_t dbId, gnsdk_cstr_t dbLocation, GnConfigOptionAccess accessMode)
{
  GnConfig config;

  config.Set(kConfigOptionLocationLookupDatabaseAll, dbLocation); // Set database location
  config.Set(kConfigOptionEnableLookupDatabaseMusicIDText, GNSDK_VALUE_TRUE); // Enable Music ID text queries
  config.Set(kConfigOptionEnableLookupDatabaseMusicIDImages, GNSDK_VALUE_TRUE);  // Enable Music ID image queries
  config.Set(accessMode); // Set database access mode

  return GnLookupDatabase(dbId, config);
}</pre></li>
                                            <li value="3">Store query results using <code class="prettyprint">GnLookupDatabase</code> methods - <code class="prettyprint">AddRecord</code> (album or contributor), and <code class="prettyprint">AddImage</code>.
<pre class="prettyprint">dbId.AddRecord(album):
dbId.AddImage(image, size, asset);</pre></li>
                                        </ol>
                                        <p>Once results are stored, data will show up in local lookups.</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">&#160;</p>
                                        <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Getting Results Database Information</h2>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">You can retrieve manifest information about your local databases, including database versions, available image sizes, and available locale configurations. Your application can use this information to request data more efficiently. For example, to avoid making queries for unsupported locales, you can retrieve the valid locale configurations contained in your local lists cache. </p>
                                        <h3 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Image Information</h3>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">GNSDK provides album cover art, and artist and genre images in different sizes. You can use the <code class="prettyprint">kImageSize</code> key with the <code class="prettyprint">GnLookupLocal</code>'s <code class="prettyprint">StorageInfo</code> method to retrieve available image sizes. This allows you to request images in available sizes only, rather than spending cycles requesting image sizes that are not available.</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Use the <code class="prettyprint">GnLookupLocal</code>'s <code class="prettyprint">StorageInfoCount</code> method to provide ordinals to the <code class="prettyprint">StorageInfo</code> method to get the image sizes.</p>
                                        <h3 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Database Versions</h3>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">To retrieve the version number for a local database, use the <code class="prettyprint">kGDBVersion</code> key with the <code class="prettyprint">StorageInfo</code> method. Use an ordinal of 1 to get the database version.</p>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt,"><b>C++</b>
                                        </p><pre data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">gnsdk_cstr_t  gdb_version = gnLookupLocal.StorageInfo(kMetadata, kGDBVersion, ordinal);</pre>
                                        <h3 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Getting Available Locales</h3>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Use the <code class="prettyprint">GnLocale</code>'s <code class="prettyprint">LocalesAvailable</code> method to get  valid locale configurations available in your local lists store. Locale configurations are combinations of values that you can use to set the locale for your application. This method returns values for group, region, language and descriptor. Returns a count of the values available for a particular local database and local storage key.
    </p>
                                        <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Setting Online Cache Expiration</h2>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">You can use the <code class="prettyprint">GnUser</code>'s <code class="prettyprint">CacheExpiration</code> method to set the maximum duration for which an item in the GNSDK query cache is valid. The duration is set in seconds and must exceed one day ( &gt; 86400). Setting this option to a zero value (0) causes the cache to start deleting records upon cache hit, and not write new or updated records to the cache; in short, the cache effectively flushes
itself. The cache will start caching records again once this option is set to a value greater than
0. Setting this option to a value less than 0 (for example: -1) causes the cache to use default
expiration values.</p>
                                        <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt"><a name="kanchor373"></a>Managing Online Cache Size and Memory</h2>
                                        <p data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">You can use the following <code class="prettyprint">GnStoreOps</code> methods to manage online cache size on disk and in memory:</p>
                                        <ul>
                                            <li value="1" data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt"><b><code class="prettyprint">FileSize</code></b>—Sets the maximum size the GNSDK cache can grow to in kilobytes; for example "100" for 100 Kb or "1024" for 1 MB. This limit applies to each cache that is created. If the cache files' current size already exceeds the maximum when this option is set, then the passed maximum is not applied. When the maximum size is reached, new cache entries are not written to the database. Additionally, a maintenance thread is run that attempts to clean up expired records from the database and create space for new records. If this option is not set the cache files default to having no maximum size.</li>
                                            <li value="2" data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt"><b><code class="prettyprint">MaximumMemorySizeForCacheSet</code></b>— Sets the maximum amount of memory SQLite can use to buffer cache data.
The value passed for this option is the maximum number of Kilobytes of memory that can be used.  For example, "100" sets the maximum to 100 KB, and "1024" sets the maximum to 1 MB.</li>
                                        </ul>
                                        <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Closing and Deleting a Results Database</h2>
                                        <p>All databases are automatically closed when your application's <code class="prettyprint">GnManager</code> object goes out of scope. You can also explicitly close a database with the <code class="prettyprint">GnLookupDatabase</code>'s <code class="prettyprint">Close</code> method. This method waits until any outstanding threads have finished accessing the database. </p>
                                        <p>To delete a database, use the <code class="prettyprint">GnLookupDatabase</code>'s <code class="prettyprint">Delete</code> method.</p>
                                        <h2 data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt">Managing Results Database Size</h2>
                                        <p>You have the option to manage the Results database size. One simple solution is to delete and re-allocate once a specified has been reached or exceeded. For example (C++):</p><pre class="prettyprint">
#define RESULT_DATABASE_MAX_SIZE   1048576 /* Maximum size for our persistent result database */

....

/* Create a configuration object for use in opening our local lookup database. */
config = new GnConfig();
/* Specify the location of the GDB files. */
config-&gt;Set(kConfigOptionLocationLookupDatabaseAll, "../../../../sample_data/gdb");
/* Enable this database for MusicID Text queries. */
config-&gt;Set(kConfigOptionEnableLookupDatabaseMusicIDText, GNSDK_VALUE_TRUE);
/* Enable this database for MusicID Images queries. */
config-&gt;Set(kConfigOptionEnableLookupDatabaseMusicIDImages, GNSDK_VALUE_TRUE);
/* Set the access mode for the database */
config-&gt;Set(_access_mode);

/* Create Lookup Database */
p_GnLookupDB = new GnLookupDatabase("OurID", *config);
      
....
            
if (p_GnLookupDB-&gt;Size() &gt; RESULT_DATABASE_MAX_SIZE)
{
   p_GnLookupDB-&gt;Close();
   GnLookupDatabase::Delete(*config);
   p_GnLookupDB = new GnLookupDatabase(id, *config);
}
</pre>
                                    </div>
                                </div>
                            </div>
                            <hr width="100%" size="0" align="center" />
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>