<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Loading a Locale</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" />
        <link href="https://cloud.typography.com/7045754/7789972/css/fonts.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.next-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.remove-highlight-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/highlight.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.separator-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/TableStyles/Standard.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" />
        <script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js">
        </script>
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div>
                        <nav class="title-bar tab-bar" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="relative clearfix"><a class="logo" href="../../../landing-page/gnsdk-home.htm" alt="Logo"></a>
                                    <div class="navigation-wrapper nocontent">
                                        <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="nav-search row outer-row">
                                <form class="search" action="#">
                                    <div class="search-bar search-bar-container needs-pie">
                                        <input class="search-field needs-pie" type="search" placeholder="Search" />
                                        <div class="search-filter-wrapper">
                                            <div class="search-filter">
                                                <div class="search-filter-content">
                                                    <ul>
                                                        <li>All Files</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="search-submit-wrapper" dir="ltr">
                                            <div class="search-submit" title="Search">
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row" data-mc-content-body="True">
                            <p style="font-weight: bold;"><span class="GeneralProductNameFull">GNSDK</span> <span class="GeneralAPI">OO APIs</span></p>
                            <p>Version 3.08.6.5437 : <span class="SystemShortDate">9/14/2017</span></p>
                            <hr width="100%" size="0" align="center" />
                            <div class="content">
                                <div id="contentBody">
                                    <div class="row collapse">
                                        <div class="sideContent">
                                            <div class="clearfix">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolBar mc-component nocontent">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie next-topic-button" title="Navigate next">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                        </button>
                                                        <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie remove-highlight-button" title="Remove Highlights">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="remove highlight" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                        </button>
                                                        <div class="button-separator">
                                                        </div>
                                                        <button class="button needs-pie print-button" title="Print">
                                                            <img src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/gnsdk__gnsdk_oo_all.js" data-mc-side-menu="True" data-mc-max-depth="4" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                            </ul>
                                        </div>
                                        <div class="nocontent">
                                            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                            </div>
                                        </div>
                                        <h1><a name="kanchor9"></a>Loading a Locale</h1>
                                        <p>GNSDK provides <i>locales</i><a name="kanchor10"></a><a name="kanchor11"></a> as a convenient way to group locale-dependent metadata specific to a region (such as Europe) and language that should be returned from the Gracenote Service. A locale is defined by a group (such as Music), a language, a region and a descriptor (indicating level of metadata detail), which are identifiers to a specific set of lists in the Gracenote Service.</p>
                                        <p>Using locales is relatively straightforward for most applications to implement. However, it is not as flexible or complicated as accessing lists directly - most locale processing is handled in the background and is not configurable. For most applications though, using locales is more than sufficient. Your application should only access lists directly if it has a specific reason or use case for doing so.</p>
                                        <p>To load a locale, allocate a <code class="prettyprint">GnLocale</code> object with one of the class constructors. The <code class="prettyprint">GnLocale</code> constructors take parameters indicating the following:</p>
                                        <ul>
                                            <li value="1"><b>Group</b><a name="kanchor12"></a><a name="kanchor13"></a><a name="kanchor14"></a> - Locale group type such as Music, Playlist, EPG or Video that can be easily tied to the application's use case.
        </li>
                                            <li value="2"><b><a name="kanchor15"></a>Region</b> - Region the application is operating in, such as US, China, Japan, Europe, and so on, possibly specified by the user configuration</li>
                                            <li value="3"><b><a name="kanchor16"></a>Language</b> - Language the application uses, possibly specified by the user configuration</li>
                                            <li value="4"><b><a name="kanchor17"></a>Descriptor</b> - Granularity of returned Gracenote metadata, either Simplified or Detailed. Applies only to genres. If you want more, finer-grained genres, then use Detailed; otherwise, if storage or bandwidth need to be minimized and/or you can live with less granular genres, use Simplified.</li>
                                            <li value="5"><b><a name="kanchor18"></a>Status callback (optional)</b> - One of the constructors takes a <code class="prettyprint">GnStatusEventsListener</code> callback object</li>
                                        </ul>
                                        <p>Once a locale is loaded it can be set as the group default. The GNSDK automatically associates certain
returned response objects, allowing Gracenote descriptive data,
such as genres, to be returned according to the locale's region and language.</p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Locales have the following space requirements: 2MB for a music only locale, 6MB for a music and playlist locale. Loading a locale can be lengthy, so your application may want to perform this operation on a background thread to avoid stalling the main thread.</p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Locales have the following space requirements: 2MB for a music only locale, 6MB for a music and playlist locale.</p>
                                        <p>For example:</p>
                                        <ul>
                                            <li value="1">A locale defined for the USA of English/ US/Detailed returns detailed content from a list written in English for a North American audience.</li>
                                            <li value="2">A locale defined for Spain of Spanish/Global/Simplified returns list metadata of a less-detailed nature, written in Spanish for a global Spanish-speaking audience (European, Central American, and South American).</li>
                                        </ul>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>To cancel a Locale load at any time, set the "canceller" provided in any IGnStatusEvents
delegate method. No cancel method is provided on GnLocale object because loading can happen on object
construction.</p>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" name="kanchor19"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" /><b>Java/Android Java</b></a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">GnLocale locale = 
  new GnLocale(GnLocaleGroup.kLocaleGroupMusic,
         GnLanguage.kLanguageEnglish, 
         GnRegion.kRegionGlobal,
         GnDescriptor.kDescriptorDefault,
         gnUser);
          
locale.setGroupDefault();</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Objective-C
        </a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">
GnLocale *locale = 
      [[GnLocale alloc] initWithGnLocaleGroup: kLocaleGroupMusic
              language: kLanguageEnglish
              region: kRegionGlobal
              descriptor: kDescriptorSimplified
              user: self.gnUser
              statusEventsDelegate: nil];
          
[locale setGroupDefault:&amp;localeError];</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" name="kanchor20"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" />Windows Phone C#
        </a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">
GnLocale locale = 
     new GnLocale(GnLocaleGroup.kLocaleGroupMusic, 
            GnLanguage.kLanguageEnglish,
            GnRegion.kRegionGlobal,
            GnDescriptor.kDescriptorDefault,
            App.mGnUser,
            null
         );

locale.SetGroupDefault();</pre>
                                            </div>
                                        </div>
                                        <div class="MCDropDown MCDropDown_Open dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="15" width="16" alt="Closed" data-mc-alt2="Open" /><b>C++</b></a></span>
                                            <div class="MCDropDownBody dropDownBody"><pre class="prettyprint">/* Set locale with desired Group, Language, Region and Descriptor */
GnLocale locale( GnSDK::kLocaleGroupMusic,
         GnSDK::kLanguageEnglish,
         GnSDK::kRegionDefault,
         GnSDK::kDescriptorSimplified,
         user,
         GNSDK_NULL); /* Use &amp;statusEvents instead of GNSDK_NULL to view progress */

/* Set this locale as default for the duration of gnsdk */
locale.SetGroupDefault();  </pre>
                                            </div>
                                        </div>
                                        <h2><a name="kanchor22"></a>Locale-Dependent Data</h2>
                                        <p>The following metadata fields require having a locale loaded:</p>
                                        <ul>
                                            <li value="1">artist type - levels 1-2</li>
                                            <li value="2">audience</li>
                                            <li value="3">era - levels 1-3</li>
                                            <li value="4">genre - levels 1-3</li>
                                            <li value="5">mood - levels 1-2</li>
                                            <li value="6">origin - levels 1-4</li>
                                            <li value="7">tempo - levels 1-3</li>
                                            <li value="8">rating</li>
                                            <li value="9">rating description</li>
                                            <li value="10">rating type</li>
                                            <li value="11">rating type ID</li>
                                            <li value="12">reputation</li>
                                            <li value="13">scenario</li>
                                            <li value="14">role</li>
                                            <li value="15">role category</li>
                                            <li value="16">serial type</li>
                                            <li value="17">setting environment</li>
                                            <li value="18">setting time period</li>
                                            <li value="19">story type</li>
                                            <li value="20">entity type</li>
                                            <li value="21">composition form</li>
                                            <li value="22">instrumentation</li>
                                            <li value="23">package display language</li>
                                            <li value="24">EPG level categories</li>
                                            <li value="25">video feature type</li>
                                            <li value="26">video production type</li>
                                            <li value="27">video media type</li>
                                            <li value="28">video region</li>
                                            <li value="29">video region description</li>
                                            <li value="30">video topic</li>
                                            <li value="31">video work type</li>
                                        </ul>
                                        <h2>Default Regions and Descriptors</h2>
                                        <p>When loading a locale, your application provides inputs specifying group, language, region, and descriptor. Region and descriptor can be set to “default.”</p>
                                        <p>When no locales are present in the local database, or no local database is enabled, and the application is configured for online access, GNSDK uses the Global region when the default region is specified, and the Detailed descriptor when the default descriptor is specified.</p>
                                        <p>Otherwise, when “default” is specified, GNSDK filters the local database and loads a locale matching the group and language (and the region and descriptor, if they are not specified as default). Complete locales (those with all sub-components present) are preferred over incomplete locales. If, after filtering, the local database contains multiple equally complete locales, a default locale is chosen using the defaults shown in the table below:</p>
                                        <table class="TableStyle-Standard" cellspacing="0" style="mc-table-style: url('../../../Resources/TableStyles/Standard.css');">
                                            <thead>
                                                <tr class="TableStyle-Standard-Head-Header1">
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1"><a name="kanchor23"></a>Regional GDB</th>
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1">Available Locales</th>
                                                    <th class="TableStyle-Standard-HeadD-Regular-Header1">Default Locale</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">North America (NA)</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">US and Latin America</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">US</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Latin America (LA)</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Latin America</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Latin America </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Korea (KR)</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Korea</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Korea</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Japan (JP) </td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Japan</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Japan</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Global (GL)</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Global, Japan, US, China, Taiwan, Korea, Europe, and Latin America</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Global</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Europe (EU)</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Europe</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Europe</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1">China (CN)</td>
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1">China and Taiwan</td>
                                                    <td class="TableStyle-Standard-BodyA-Regular-Row1">China</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <p>If no locales are present after filtering the local database, an error is returned.</p>
                                        <p>Default regions and descriptors can be used to write generic code for loading a locale. For example, consider an application targeted for multiple devices: one with a small screen, where the Simplified locales are desired; and one with a large screen, where more detail can be displayed to the user, and the Detailed locales are desired. The application code can be written to generically load locales with the “default” descriptor, and each application can be deployed with a local database containing simplified locales (small-screen version), or detailed locales (large-screen version). GNSDK loads the appropriate locales based on the contents of the local database.</p>
                                        <h2><a name="kanchor24"></a>Locale Groups</h2>
                                        <p>Setting the locale for a group causes the given locale to apply to a particular media group - Music, Playlist, Video or EPG. For example, setting a locale for the Music group applies the locale to all music-related objects. When a locale is loaded, all lists necessary for the locale group are loaded into memory. For example, setting the locale for the Playlist group causes all lists needed to generate playlists to be loaded.</p>
                                        <p>Once a locale has been loaded, you must call the <code class="prettyprint">GnLocale</code>'s <code class="prettyprint">SetGroupDefault</code> method before retrieving locale-dependent values.</p>
                                        <h3><a name="kanchor25"></a>Multi-Threaded Access</h3>
                                        <p>Since locales and lists can be accessed concurrently, your application has the option to perform such actions as generating a Playlist or obtaining result display strings using multiple threads.</p>
                                        <p>Typically, an application loads all required locales at start up, or when the user changes preferred region or language. To speed up loading multiple locales, your application can load each locale in its own thread.</p>
                                        <h3>Updating Locales and Lists</h3>
                                        <p><a name="kanchor26"></a>GNSDK supports storing locales and their associated lists locally, which improves access times and performance. Your application must enable a database module (such as SQLite) to implement local storage. For more information,  See <a href="enable-storage.htm" class="MCXref xref">Enabling and Using GNSDK Storage</a> .</p>
                                        <h4><a name="kanchor27"></a>Update Notification</h4>
                                        <p>Periodically, your application may need to update any locale lists that are stored locally. As a best practice, Gracenote recommends registering a locale update notification callback or, if you are using lists directly, a lists update nortification callback. To do this, you need to code an <code class="prettyprint">IGnSystemEvents</code> delegate that implements the locale or list update methods—<code class="prettyprint">LocaleUpdateNeeded</code> or <code class="prettyprint">ListUpdateNeeded</code>—and provide that delegate as a parameter to the <code class="prettyprint">GnManager</code>'s <code class="prettyprint">EventHandler</code> method. When GNSDK internally detects that a locale or list is out of date, it will call the appropriate callback. Detection occurs when a requested list value is not found. This is done automatically without the need for user application input. Note, however, that if your application does not request locale-dependent metadata or missing locale-dependent data, no detection will occur. </p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Updates require the user lookup mode option to be set to online lookup - <code class="prettyprint">kLookupModeOnline</code>(default) or online lookup only—<code class="prettyprint">kLookupModeOnlineCacheOnly</code>. This allows the SDK to retreive locales from the Gracenote Service. You may need to toggle this option value for the update process.<MadCap:conditionalText data-mc-conditions="Default.auto-gen-cndt,Default.desk-gen-cndt,Default.mobl-gen-cndt"> For more information about setting the user option, <a href="set-local-online-lookup-modes.htm" class="MCXref xref">Setting Local and Online Lookup Modes</a>.</MadCap:conditionalText></p>
                                        <p>Once your app receives a notification, it can choose to immediately do the update or do it later. Gracenote recommends doing it immediately as this allows the current locale/list value request to be fulfilled, though there is a delay for the length of time it takes to complete the update process.</p>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>The GNSDK does not set an internal state or persistant flag indicating an update is required; your application is responsibile for managing the deferring of updates beyond the notification callback.</p>
                                        <h2><a name="kanchor28"></a>Locale Behavior</h2>
                                        <p>How locales are stored, accessed and updated depends on how you have configured your storage and lookup options as shown in the following table. <MadCap:conditionalText data-mc-conditions="Default.mobl-gen-cndt,Default.auto-gen-cndt,Default.desk-gen-cndt">For information on configuring lookup modes see <a href="set-local-online-lookup-modes.htm" class="MCXref xref">Setting Local and Online Lookup Modes</a>.</MadCap:conditionalText></p>
                                        <table class="TableStyle-Standard" cellspacing="0" style="mc-table-style: url('../../../Resources/TableStyles/Standard.css');">
                                            <thead>
                                                <tr class="TableStyle-Standard-Head-Header1">
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1"><a name="kanchor29"></a><a name="kanchor30"></a>Storage Provider Initialized</th>
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1">GnLookupMode Enum</th>
                                                    <th class="TableStyle-Standard-HeadD-Regular-Header1">Behavior</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Either</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLookupModeOnlineNoCache</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1"><a name="kanchor31"></a>Locales are always downloaded and stored in RAM, not local storage.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Not initialized</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">
                                                        <br /><code class="prettyprint">kLookupModeOnline</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Locales are always downloaded and stored in RAM, not local storage.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Initialized</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLookupModeOnline</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">If downloaded, locales are read from local storage. Downloaded locales are written immediately to local storage.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Not Initialized</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLookupModeOnlineNoCacheRead</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Locales are always downloaded and stored in RAM.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Initialized</td>
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1"><code class="prettyprint">kLookupModeOnlineNoCacheRead</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Locales are always downloaded and stored in RAM and local storage. Locale data is always read from RAM, not local storage.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1">Initialized</td>
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1"><code class="prettyprint">kLookupModeOnlineCacheOnly</code>
                                                        <br /><code class="prettyprint">kLookupModeLocal</code>
                                                    </td>
                                                    <td class="TableStyle-Standard-BodyA-Regular-Row1">Locale data is read from local storage. If requested data is not in locale storage the load attempt fails. Local storage is updated when new versions become available. The application developer is responsible for providing that mechanism.</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>Locale behavior may not change if the lookup mode is changed after the locale is loaded. For example, if a locale is loaded when the lookup mode is <code class="prettyprint">kLookupModeOnline</code>, locale data will be read from local storage even if the lookup mode is changed.</p>
                                        <h2><a name="kanchor32"></a>Best Practices</h2>
                                        <table class="TableStyle-Standard" cellspacing="0" style="mc-table-style: url('../../../Resources/TableStyles/Standard.css');">
                                            <thead>
                                                <tr class="TableStyle-Standard-Head-Header1">
                                                    <th class="TableStyle-Standard-HeadE-Regular-Header1">Practice</th>
                                                    <th class="TableStyle-Standard-HeadD-Regular-Header1">Description</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Applications should use locales.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Locales are simpler and more convenient than accessing lists directly. An application should only use lists if there are specific circumstances or use cases that require it.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Apps should register a locale/list update notification callback and, when invoked, immediately update locales/lists.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">See the <i><b>Update Notification</b></i> section above.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Applications can deploy with pre-populated list stores and reduce startup time.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">
                                                        <p>On startup, a typical application loads locale(s). If the requested locale is not cached, the required lists are downloaded from the Gracenote Service and written to local storage. This procedure can take time.</p>
                                                        <p>Customers should consider creating their own list stores that are deployed with the application to decrease the initial startup time and perform a locale update in a background thread once the application is up and running.</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Use multiple threads when loading or updating multiple locales.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">Loading locales in multiple threads allows lists to be fetched concurrently, reducing overall load time.</td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Update locales in a background thread.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">
                                                        <p>Locales can be updated while the application performs normal processing. The SDK automatically switches to using new lists as they are updated. </p>
                                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>If the application is using the GNSDK Manager Lists interface directly and the application holds a list handle, that list is not released from memory and the SDK will continue to use it.</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Set a persistence flag when updating. If interrupted, repeat update.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">
                                                        <p>If the online update procedure is interrupted (such as network connection/power loss) then it must be repeated to prevent mismatches between locale required lists. </p>
                                                        <p>Your application should set a <i>persistence</i> flag before starting an update procedure. If the flag is still set upon startup, the application should initiate an update. You should clear the flag after the update has completed.</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Call the <code class="prettyprint">GnStoreOps</code>' <code class="prettyprint">Compact</code> method after updating lists or locales.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">
                                                        <p>As records are added and deleted from locale storage, some storage solutions, such as SQLite, can leave empty space in the storage files, artificially bloating them. You can call the <code class="prettyprint">GnStoreOps</code>' <code class="prettyprint">Compact</code> method to remove these. </p>
                                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>The update procedure is not guaranteed to remove an old version of a list from storage immediately because there could still be list element references which must be honored until they are released. Therefore, your application should call the <code class="prettyprint">GnStoreOps</code>' <code class="prettyprint">Compact</code> method during startup or shutdown after an update has finished.</p>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyE-Regular-Row1">Local only applications should set the user handle option for lookup mode to local only.</td>
                                                    <td class="TableStyle-Standard-BodyD-Regular-Row1">
                                                        <p>If your application wishes to only use the Locales in pre-populated Locales storage, then it must set the user handle lookup mode to local. </p>
                                                        <p>For example (C++)</p><pre class="prettyprint">/* Set lookup mode (all queries done with this user will inherit the lookup mode) */
user.Options().LookupMode(kLookupModeLocal);</pre>
                                                    </td>
                                                </tr>
                                                <tr class="TableStyle-Standard-Body-Row1">
                                                    <td class="TableStyle-Standard-BodyB-Regular-Row1">To simplify the implementation of multi-region applications, use the default region and descriptor.</td>
                                                    <td class="TableStyle-Standard-BodyA-Regular-Row1">
                                                        <p>The Locale subsystem can infer a region and descriptor from the Locale store that can be used in place of the region and descriptor deaults when loading a locale. This can simplify implementing an application intended to be deployed in different regions with its own region specific pre-populated Locale store.</p>
                                                        <p class="note" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #e31b23;&quot; class=&quot;mcFormatColor&quot;&gt;Note: &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #e31b23;" class="mcFormatColor">Note: </span></b></span></span>If you are deploying your app to multiple regions with a pre-populated Locale store containing locales for all target regions then you should use <code class="prettyprint">kRegionDefault</code> and <code class="prettyprint">kDescriptorDefault</code> when loading a locale. In this case, the same region and descriptor are used based on defaults hardcoded into the SDK.</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                        <br />
                                    </div>
                                </div>
                            </div>
                            <hr width="100%" size="0" align="center" />
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>